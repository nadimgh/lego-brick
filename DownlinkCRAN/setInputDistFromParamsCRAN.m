function input_dist = setInputDistFromParamsCRAN(params)
%get the input distribution from the parameters of the optimization problem
%corresponding to the capacity computation of the CRAN problem

num_params = length(params);

if num_params == 3
    input_dist = [(1-params(1))*(1-params(2)) (1-params(1))*params(2) params(1)*(1-params(3)) params(1)*params(3)];
    input_dist = input_dist/sum(input_dist);
elseif num_params == 15
    input_dist = [(1-params(1))*(1-params(2))*(1-params(4))*(1-params(8)) ...
        (1-params(1))*(1-params(2))*(1-params(4))*params(8) ...
        (1-params(1))*(1-params(2))*params(4)*(1-params(9)) ...
        (1-params(1))*(1-params(2))*params(4)*params(9) ...
        (1-params(1))*params(2)*(1-params(5))*(1-params(10)) ...
        (1-params(1))*params(2)*(1-params(5))*params(10) ...
        (1-params(1))*params(2)*params(5)*(1-params(11)) ...
        (1-params(1))*params(2)*params(5)*params(11) ...
        params(1)*(1-params(3))*(1-params(6))*(1-params(12)) ...
        params(1)*(1-params(3))*(1-params(6))*params(12) ...
        params(1)*(1-params(3))*params(6)*(1-params(13)) ...
        params(1)*(1-params(3))*params(6)*params(13) ...
        params(1)*params(3)*(1-params(7))*(1-params(14)) ...
        params(1)*params(3)*(1-params(7))*params(14) ...
        params(1)*params(3)*params(7)*(1-params(15)) ...
        params(1)*params(3)*params(7)*params(15)];
    input_dist = input_dist/sum(input_dist);
end

end

